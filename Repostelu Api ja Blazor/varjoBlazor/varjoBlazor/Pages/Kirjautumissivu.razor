@page "/kirjaudu"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject TunnistaKayttaja TunnistaKayttaja


<h3>Kirjaudu sisään</h3>

@if (!string.IsNullOrEmpty(VirheViesti))
{
    <p style="color: red;">@VirheViesti</p>
}

<form>
    <div>
        <label for="email">Sähköposti:</label>
        <input type="email" id="email" @bind="Sahkoposti" required />
    </div>
    <div>
        <label for="password">Salasana:</label>
        <input type="password" id="password" @bind="Salasana" required />
    </div>
    <button type="button" @onclick="Kirjaudu">Kirjaudu</button>
</form>

@code {
    private string Sahkoposti { get; set; } = "";
    private string Salasana { get; set; } = "";
    private string VirheViesti { get; set; } = "";

    private Kayttaja? kayttaja;

    private async Task Kirjaudu()
    {
        try
        {
            var url = $"Kayttaja/Tunnistautumistiedot/{Salasana}/{Sahkoposti}";
            kayttaja = await Http.GetFromJsonAsync<Kayttaja>(url);

            if (kayttaja != null)
            {
                TunnistaKayttaja.Sahkoposti    = Sahkoposti;
                TunnistaKayttaja.Salasana = Salasana;

                NavigationManager.NavigateTo("/kaikki");
            }
            else
            {
                VirheViesti = "Virheellinen sähköposti tai salasana.";
            }
        }
        catch
        {
            VirheViesti = "Virhe kirjautumisessa.";
        }
    }

   
}
