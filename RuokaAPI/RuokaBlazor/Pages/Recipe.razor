@page "/recipe/{reseptiId:int}"
@layout MainLayout
@inject HttpClient Http

<PageTitle>Resepti: @resepti?.Nimi</PageTitle>

@if (resepti == null)
{
    <div class="page-container">
        <h1>Ladataan...</h1>
    </div>
}
else
{
    <div class="page-container">
        <header>
            <h1>@resepti.Nimi</h1>
            @if (!string.IsNullOrWhiteSpace(resepti.Kuva1))
            {
                <img src="@resepti.Kuva1" alt="@resepti.Nimi" class="recipe-image" />
            }
            <p>@resepti.Valmistuskuvaus</p>
        </header>

        <div class="recipe-container">
            <!-- Ainesosat -->
            <div class="ingredients">
                <h2>Ainesosat</h2>
                <ul>
                    @foreach (var ainesosa in resepti.Ainesosat)
                    {
                        <li>@ainesosa</li>
                    }
                </ul>
            </div>

            <!-- Valmistusohjeet -->
            <div class="instructions">
                <h2>Valmistusohjeet</h2>
                <p>@resepti.Valmistuskuvaus</p>
            </div>
        </div>
    </div>
}

<style>
    .page-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem;
        text-align: center;
    }

    .recipe-image {
        max-width: 100%;
        height: auto;
        margin: 1rem 0;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .recipe-container {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        justify-content: center;
        text-align: left;
    }

    .ingredients, .instructions {
        flex: 1 1 45%;
        min-width: 300px;
        padding: 1rem;
        border: 1px solid #ccc;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        background-color: #fff;
    }

    ul {
        margin: 0;
        padding-left: 1.5rem;
    }

    h1, h2 {
        margin-bottom: 1rem;
    }
</style>

@code {
    [Parameter] public int ReseptiId { get; set; }

    private ReseptiDto? resepti;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Haetaan resepti API:sta
            resepti = await Http.GetFromJsonAsync<ReseptiDto>($"resepti/{ReseptiId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Virhe reseptiä haettaessa: {ex.Message}");
        }
    }

    public class ReseptiDto
    {
        public int Id { get; set; }
        public string Nimi { get; set; }
        public string Valmistuskuvaus { get; set; } = string.Empty;
        public string[] Ainesosat { get; set; } = Array.Empty<string>();
        public string Kuva1 { get; set; } = string.Empty;
        public string[] Avainsanat { get; set; } = Array.Empty<string>();
    }
}
